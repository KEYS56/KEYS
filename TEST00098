-- ‚úÖ Enhanced Lua Script with DogarmorHub Integration (Simplified Version)
local webhookURL = "https://discord.com/api/webhooks/1385186582386184274/vO2YR4vClJ7PZqMMEv8Vy_MFqXVhD8ABa4UIAyFrxxRRCjuEoHT9LK9uCszz8mgOn16A"

-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏™‡πà script_key ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if not script_key then
	print("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà script_key ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô Script!")
	return
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á Executor
local function getExecutor()
	if identifyexecutor then return identifyexecutor() end
	if KRNL_LOADED then return "Krnl" end
	if isexecutorclosure then return "Script-Ware" end
	if fluxus then return "Fluxus" end
	if SENTINEL_LOADED then return "Sentinel" end
	if PROTOSMASHER_LOADED then return "ProtoSmasher" end
	return "Unknown"
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á HWID
local function getHWID()
	if syn and syn.crypt and syn.crypt.hash then
		return syn.crypt.hash("HWID_" .. tostring(game:GetService("RbxAnalyticsService"):GetClientId()))
	elseif gethwid then
		return gethwid()
	elseif identifyexecutor and identifyexecutor():lower():find("fluxus") then
		return "fluxus_" .. tostring(game:GetService("RbxAnalyticsService"):GetClientId())
	else
		return "fallback_" .. tostring(game:GetService("RbxAnalyticsService"):GetClientId())
	end
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Request
local function GetRequest()
	if syn and syn.request then return syn.request end
	if http and http.request then return http.request end
	if http_request then return http_request end
	if fluxus and fluxus.request then return fluxus.request end
	if request then return request end
	return nil
end

-- ‚úÖ ‡∏î‡∏∂‡∏á IP Address
local function getIP()
	local req = GetRequest()
	if not req then return "Unknown" end
	local success, res = pcall(function()
		return req({ Url = "https://api.ipify.org", Method = "GET" })
	end)
	return success and res and res.Body or "Unknown"
end

-- ‚úÖ ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡∏à‡∏≤‡∏Å IP
local function getCountry(ip)
	local req = GetRequest()
	if not req then return "Unknown" end
	local success, res = pcall(function()
		return req({ Url = "http://ip-api.com/json/" .. ip, Method = "GET" })
	end)
	if success and res and res.Body then
		local data = game:GetService("HttpService"):JSONDecode(res.Body)
		return data.country or "Unknown"
	end
	return "Unknown"
end

-- ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Key ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
local function isKeyBanned(key)
	local success, bannedData = pcall(function()
		return game:HttpGet("https://raw.githubusercontent.com/KEYS56/KEYS/refs/heads/main/%5BBlacklist%5D")
	end)

	if not success then
		return false
	end

	for line in bannedData:gmatch("[^\r\n]+") do
		if line and line ~= "" then
			local bannedKey = line:match("([^:]+)")
			if bannedKey and bannedKey:gsub("^%s*(.-)%s*$", "%1") == key then
				local parts = {}
				for part in line:gmatch("[^:]+") do
					table.insert(parts, part)
				end
				local reason = table.concat(parts, ":", 3) or "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•"
				return true, reason
			end
		end
	end

	return false
end

-- ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Free Key ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
local function isFreeKey(key)
	local success, freeData = pcall(function()
		return game:HttpGet("https://raw.githubusercontent.com/KEYS56/KEYS/refs/heads/main/-%5BFREE%5D-")
	end)

	if not success or not freeData or freeData == "" then
		return nil, "No more Free key"
	end

	for line in freeData:gmatch("[^\r\n]+") do
		if line and line:find(key) then
			return true, "Free key validated"
		end
	end

	return false, "No more Free key"
end

-- ‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord
local function sendToDiscord(status, key, hwid, playerInfo, executor, ip, country, message, keyOwnerDiscordId)
	local HttpService = game:GetService("HttpService")

	local fields = {
		{ name = " Username", value = playerInfo.username, inline = true },
		{ name = " Display Name", value = playerInfo.displayName, inline = true },
		{ name = " User ID", value = playerInfo.userId, inline = true },
		{ name = " Key Used", value = "```" .. key .. "```", inline = false },
		{ name = " HWID", value = "```" .. hwid .. "```", inline = false },
	}

	if keyOwnerDiscordId and keyOwnerDiscordId ~= "Unknown" then
		table.insert(fields, { name = "üë• Discord ID", value = "<@" .. keyOwnerDiscordId .. ">", inline = true })
	else
		table.insert(fields, { name = "üë• Discord ID", value = "Unknown", inline = true })
	end

	table.insert(fields, { name = "Executor", value = executor, inline = true })
	table.insert(fields, { name = "Country", value = country, inline = true })
	table.insert(fields, { name = "IP Address", value = ip, inline = true })
	table.insert(fields, { name = "Status", value = "```" .. message .. "```", inline = false })
	table.insert(fields, { name = "API Source", value = "```DogarmorHub API```", inline = true })

	local embed = {
		["username"] = status == "success" and "DogarmorHub Success" or "‚ùå DogarmorHub Failed",
		["embeds"] = {{
			["title"] = status == "success" and "Script Executed Successfully" or "‚ùå Script Execution Failed",
			["color"] = status == "success" and 65280 or 16711680,
			["fields"] = fields,
			["footer"] = { text = "DogarmorHub Logger System ‚Ä¢ " .. os.date("%Y-%m-%d %H:%M:%S") },
			["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
		}}
	}

	pcall(function()
		GetRequest()({
			Url = webhookURL,
			Method = "POST",
			Headers = { ["Content-Type"] = "application/json" },
			Body = HttpService:JSONEncode(embed)
		})
	end)
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Key ‡πÅ‡∏•‡∏∞ HWID (‡πÉ‡∏ä‡πâ DogarmorHub API)
local function verifyKeyAndHWID(inputKey, userHWID)
	local isBanned, banReason = isKeyBanned(inputKey)
	if isBanned then
		return false, "Key ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô!\n‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: " .. (banReason or "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•"), nil
	end

	-- Free key check
	local free, msg = isFreeKey(inputKey)
	if free then
		return true, "Free key validated! Enjoy.", "FREE_USER"
	elseif free == false then
		game.Players.LocalPlayer:Kick(msg or "No more Free key")
		return false, msg, nil
	end

	local success, keysData = pcall(function()
		return game:HttpGet("https://raw.githubusercontent.com/KEYS56/KEYS/refs/heads/main/%5BKeys%5D")
	end)

	if not success then
		return false, "Check your net DogarmorHub ‡πÑ‡∏î‡πâ\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï", nil
	end

	for line in keysData:gmatch("[^\r\n]+") do
		if line and line ~= "" then
			local key, hwid, userid = line:match("([^:]+):([^:]+):?(.*)")

			if key and hwid then
				key = key:gsub("^%s*(.-)%s*$", "%1")
				hwid = hwid:gsub("^%s*(.-)%s*$", "%1")
				userid = userid and userid:gsub("^%s*(.-)%s*$", "%1") or "Unknown"

				if key == inputKey then
					if hwid == userHWID then
						return true, "Key ‡πÅ‡∏•‡∏∞ HWID ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î Script...", userid
					else
						return false, "HWID ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô!\n ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô: " .. hwid .. "\n ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: " .. userHWID .. "\n\nüí° ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /setup ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Reset HWID", userid
					end
				end
			end
		end
	end

	return false, "Key ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ Staff ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠ Key", nil
end

-- ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
local function displayMessage(type, message)
	local border = "=" .. string.rep("=", 50) .. "="
	local spacer = "|" .. string.rep(" ", 50) .. "|"

	print(border)
	print(spacer)

	if type == "success" then
		print("|SUCCESS: " .. string.rep(" ", 35) .. "|")
	elseif type == "error" then
		print("|ERROR: " .. string.rep(" ", 37) .. "|")
	elseif type == "loading" then
		print("|LOADING: " .. string.rep(" ", 35) .. "|")
	end

	print(spacer)
	for line in message:gmatch("[^\n]+") do
		local padding = 50 - #line
		local leftPad = math.floor(padding / 2)
		local rightPad = padding - leftPad
		print("| " .. string.rep(" ", leftPad) .. line .. string.rep(" ", rightPad) .. "|")
	end

	print(spacer)
	print(border)
end

-- ‚úÖ ‡πÇ‡∏´‡∏•‡∏î Script ‡∏´‡∏•‡∏±‡∏Å
local function loadMainScript()
	print("\n ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î Script ‡∏´‡∏•‡∏±‡∏Å...")
	loadstring(game:HttpGet("https://dogarmorhub.space/loader"))()
	print(" Script ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!")
	return true
end

-- ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
print("\n Checking DogarmorHub...")
local player = game:GetService("Players").LocalPlayer
local playerInfo = {
	username = player.Name,
	displayName = player.DisplayName,
	userId = tostring(player.UserId)
}

local userHWID = getHWID()
local executor = getExecutor()
local ip = getIP()
local country = getCountry(ip)

print("‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô: " .. playerInfo.username)
print("User ID: " .. playerInfo.userId)
print("HWID: " .. userHWID)
print(" Executor: " .. executor)
print("‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®: " .. country)
print("Key: " .. script_key)
print("API: DogarmorHub.space")

print("\n ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Key ‡πÅ‡∏•‡∏∞ HWID ‡∏à‡∏≤‡∏Å DogarmorHub...")

local isValid, message, keyOwnerDiscordId = verifyKeyAndHWID(script_key, userHWID)

if isValid then
	displayMessage("success", "Key ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö!\nDogarmorHub API Connected")
	sendToDiscord("success", script_key, userHWID, playerInfo, executor, ip, country, message, keyOwnerDiscordId)
	local mainLoaded = loadMainScript()
	if mainLoaded then
		displayMessage("success", "Done\nDogarmorHub Script Start!...")
	else
		displayMessage("error", "Script Can't load main core")
	end
else
	displayMessage("error", message)
	sendToDiscord("failure", script_key, userHWID, playerInfo, executor, ip, country, message, keyOwnerDiscordId)
end

script_key = nil
